@model Dockoptimizer.Data.ViewModels.FacilityMasterViewModel
@*@{
    ViewBag.Title = "Inspection List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@

<style type="text/css">


    .select2-results__option[aria-selected=true]:before {
        font-family: fontAwesome;
        content: "\2714";
        color: #fff;
        background-color: #7e7e7e;
        border: 0;
        display: inline-block;
        padding-left: 5px;
    }

    .select2-results__option:before {
        content: "";
        display: inline-block;
        height: 24px;
        width: 24px;
        border: 2px solid #e9e9e9;
        border-radius: 4px;
        background-color: #fff;
        margin-right: 20px;
        vertical-align: middle;
    }

</style>
<section class="gradient-custom">
    <div class="container ">
        <div class="row justify-content-center align-items-center h-100">
            <div class="col-lg-12">
                <div class="card shadow-2-strong card-registration" style="border-radius: 15px; max-width:100%;">
                    <div class="card-body p-4 p-md-5">
                        <form class="" method="post" id="AddFacilityForm">
                            <div class="row">

                                <div class="col-md-3 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("Facility Name :")
                                        @Html.HiddenFor(e => e.Id , new { @ID="FacilityId"})
                                        @Html.HiddenFor(e => e.CreatedBy , new { @ID="CreatedBy"})
                                        @Html.HiddenFor(e => e.CreatedOn , new { @ID="CreatedOn"})
                                        @Html.HiddenFor(e => e.UpdatedBy , new { @ID="UpdatedBy"})
                                        @Html.HiddenFor(e => e.UpdatedOn , new { @ID="UpdatedOn"})
                                        @Html.TextBoxFor(e => e.FacilityName, new { @class = "form-control form-control-lg", @ID="FacilityName", required = "required" })
                                        <span class="text-danger" id="SpanFacilityName" style="display:none;">Please Enter Facility Name</span>
                                    </div>
                                </div>

                                <div class="col-md-4 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("House No :")
                                        @Html.TextAreaFor(e => e.Address1, new { @class = "form-control form-control-lg", @ID="Address1" })
                                    </div>
                                </div>

                                <div class="col-md-4 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("Lendmark :")
                                        @Html.TextAreaFor(e => e.Address2, new { @class = "form-control form-control-lg", @ID="Address2" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-3 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("City :")
                                        @Html.TextBoxFor(e => e.City, new { @class = "form-control form-control-lg", @ID="City" })
                                    </div>
                                </div>

                                <div class="col-md-3 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("State :")
                                        @Html.TextBoxFor(e => e.State, new { @class = "form-control form-control-lg", @ID="State" })
                                    </div>
                                </div>

                                <div class="col-md-3 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("Country :")
                                        @Html.TextBoxFor(e => e.Country, new { @class = "form-control form-control-lg", @ID="Country" })
                                    </div>
                                </div>

                                <div class="col-md-3 mb-4">
                                    <div class="form-outline">
                                        @Html.Label("Pincode :")
                                        @Html.TextBoxFor(e => e.Pincode, new { @class = "form-control form-control-lg", @ID="Pincode",oninput="numberOnly(this.id);" })
                                        <span class="text-danger ValidationSpan" id="Spanlengthpincode" style="display:none;">Please Enter 6 digit pin code</span>
                                        <span class="text-danger ValidationSpan" id="Spanvalidpincode" style="display:none;">Please Enter Valid Pincode</span>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <div class="form-outline">
                                        @Html.Label("Longitude :")
                                        @Html.TextBoxFor(e => e.Longitude, new { @class = "form-control form-control-lg", @ID="Longitude" })
                                    </div>
                                </div>

                                <div class="col-md-3 mb-3">
                                    <div class="form-outline">
                                        @Html.Label("Latitude :")
                                        @Html.TextBoxFor(e => e.Latitude, new { @class = "form-control form-control-lg", @ID="Latitude" })
                                    </div>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <div class="form-outline">
                                        @Html.Label("Event :")
                                        <select class="js-select2" id="Event" multiple placeholder="Select event type"></select>

                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <div class="form-outline">
                                        <input class="btn btn-primary btn-lg" id="btnSave" onclick="SaveFacility()" type="button" value="Submit" />
                                        @*<input class="btn btn-primary btn-lg" id="btnSave" onclick="Test()" type="button" value="Test" />*@
                                        @Html.ActionLink("Cancel", "index", "FacilityMaster", new { area = "" }, new { @class = "btn btn-primary btn-lg" })
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@*<link href="~/lib/jquery-confirm/jquery-confirm.min.css" rel="stylesheet" />

<script src="~/lib/jquery-confirm/jquery-confirm.min.js"></script>*@
<script>
    $(document).ready(function () {
        debugger;
        GetAllEvents();

        //BindDropdown(@Html.Raw(Json.Serialize(Model.EventTypes)), "Event");
    })

    function SaveFacility() {
        debugger;
        var pincoderegx = "^[1-9][0-9]{5}$";
        var pincode = $("#Pincode").val();
        var ErrorCnt = 0;
        $('.ValidationSpan').hide();


        if ($("#FacilityName").val() == "0" || $("#FacilityName").val() == "") {
            ErrorCnt++;
            $('#SpanFacilityName').show();
        }

        if (pincode.length > 1) {
            if (pincode.length < 6 || pincode.length > 6) {
                ErrorCnt++;
                $("#Spanlengthpincode").show();
            }
            else if (pincode.length == 6) {

                if (!pincode.match(pincoderegx)) {
                    ErrorCnt++;
                    $("#Spanvalidpincode").show();
                }
            }
        }


        if (ErrorCnt > 0) {
            return false;
        }
        if (ErrorCnt == 0) {

            var eventTypeId = $('#Event').val();
            var formData = $("#AddFacilityForm").serialize();
            var finalformdata = formData + "&Event=" + eventTypeId
            //  console.log(formData);
            $.ajax({
                url: "/FacilityMaster/SaveOrUpdateFacility",
                type: "POST",
                data: finalformdata,
                success: function (response) {
                    debugger;
                    if (response.errorCode == 0) {
                        //  alert(response.errorMessage);
                        //  toastr.success('Success', response.errorMessage);
                        $.confirm({
                            title: 'Success!',
                            content: response.errorMessage,
                            buttons: {
                                confirm: function () {
                                    window.location.href = "/FacilityMaster/index";
                                }
                            }
                        });

                    }
                },
                error: function (request, status, error) {
                    //toastr.error('Error', request.responseJSON);
                    debugger;
                    $.confirm({
                        title: 'Error!',
                        content: request.responseJSON,
                        buttons: {
                            confirm: function () {
                                return false;
                            }
                        }
                    });
                }

            });
        }
    }
  

    function GetAllEvents() {
        debugger;
        $.ajax({
            url: "/Calendar/GetAllEvents",
            method: "POST",
            data: { startdate: null, enddate: null, fromPage: null },
            success: function (result) {
                if (result.isSuccess) {
                    BindDropdown(result.eventTypes, "Event");
                } else {
                    window.location.href = "/Account/Login";
                }

            },
            error: function (error) {
                alert('failed');
            }
        });

    }

    function BindDropdown(list, drpid) {
        debugger;

        var eventTypeId = $('#' + drpid).val();
        $("#" + drpid).html("");
        //$('#op1').append('<option value="0" style="color: #7b809a;">Select Event Type</option>');
        for (var i = 0; i < list.length; i++) {
            var opt = new Option(list[i].eventTypeName, list[i].id, "Select Event Type");
            $('#Event').append(opt);

        }
        $("#" + drpid).select2({
            width: 'style',
            placeholder: $("#" + drpid).attr('placeholder'),
            allowClear: Boolean($("#" + drpid).data('allow-clear')),
            tags: true,
            allowHtml: true,
            closeOnSelect: false,
        });

        var EventIds = @Html.Raw(Json.Serialize(Model.EventIds));
        $("#" + drpid).val(EventIds).trigger('change');
    }
</script>


